int lengthOfLinkedList(Node* &head) {

    Node* temp = head;

    int length = 0;

    while(temp) {

        length ++;

        temp = temp -> next;

    }

    return length;

}


Node* kReverse(Node* head, int k) {



     int length = lengthOfLinkedList(head);
    // base case

    if(head == NULL || k > length) {

        return head;

    }


 

    // Step 1: reverse first k node
     Node*forward=NULL;
     
    Node* curr = head;

    Node* prev = NULL;

    int count = 0;


 

    while(curr != NULL && count < k) {

        forward = curr -> next;

        curr -> next = prev;

        prev = curr;

        curr = forward;

        count++;

    }


 

    // step 2: Recursion dekhlega aage ka

    if(forward != NULL) {

        head -> next = kReverse(forward, k);

    }


 

    // step 3: return head of reversed list

    return prev;


 

}


