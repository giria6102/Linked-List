class Node{
    public:
    int data;
    Node*next;
    // constructor
    Node(int data){
        this->data=data;
        this->next=NULL;
    }
};

void Head(Node*&head,int d){
    Node*temp=new Node(d);
    temp->next=head;
    head=temp;
}
void Tail(Node*&tail,int d){
    Node* temp=new Node(d);
    tail->next=temp;
    tail=temp;
}
void print(Node*&head){
    Node*temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}
    void Atposition(Node*&tail,Node*&head,int position,int d){
    if(position==1){
        Head(head,d);
        return;
    }
    Node*temp=head;
    int cnt=1;
    while(cnt<position-1){
        temp=temp->next;
        cnt++;
    }
    if(temp->next=NULL){
        Tail(tail,d);
        return;
    }
    Node*Nodetoinsert=new Node(d);
    Nodetoinsert->next=temp->next;
    temp->next=Nodetoinsert;
    
}


int main() {
    Node*n1=new Node(10);
    Node*head=n1;
    Node*tail=n1;
     
     Head(head,12);
     Tail(tail,11);
    Atposition(tail,head,3,22);  
    print(head);

    return 0;
}
