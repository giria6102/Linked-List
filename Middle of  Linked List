Appraoch-1

int getlength(Node*head){
    int len=0;
    while(head!=NULL){
        len++;
        head=head->next;
    }
    return len;
}

Node *findMiddle(Node *head) {
    int length=getlength(head);
    int mid=length/2;
    Node*temp=head;
    int cnt=0;
    while(cnt<mid){
        cnt++;
        temp=temp->next;
    }
    return temp;
}

Approach-2(optimised)

Node*getmiddle(Node*head){
    if(head==NULL||head->next==NULL){
        return head;
    }
    // two Nodes are present
    if(head->next->next==NULL){
        return head->next;
    }
    Node*fast=head->next;
    Node*slow=head;
       while(fast!=NULL){
           fast=fast->next;
           if(fast!=NULL){
            fast=fast->next;  
           }
           slow=slow->next;
       }
       return slow;
}
